HW10 for CS1

#include <iostream>
#include <string>

using namespace std;

//Function prototypes
char tolower(char);
bool isalpha(char);
string compress(string);
string reverse(string);

int main()
{

	//Local Declarations

	char answer;
	string input;

	//Checks if it's a palindrome or not

	do
	{
		cout << "Enter a sentence to check:\n";
		getline(cin, input); // gets the whole line instead of just one word
		cout << input << endl;

		string compressed = compress(input);
		cout << "Compressed input: " << compressed << "\n";

		string reversed = reverse(compressed);
		cout << "Reversed input: " << reversed << "\n";

		if (compressed == reversed)
		{
			cout << "It is a palindrome\n";
		}
		else
		{
			cout << "It is not a palindrome\n";
		}

		cout << "Do you want to enter another? [Y or N] " << endl;
		cin >> answer;
		cin.ignore(255, '\n'); // ignores the rest of the line
	} while (answer == 'Y' || answer == 'y');

	system("pause");
	return 0;
}

char tolower(char c)
{
	return (c >= 'A' && c <= 'Z') ? (c - 'A' + 'a') : c;
}

bool isalpha(char c)
{
	return (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z');
}

string compress(string s)
{
	string result;

	for (int i = 0; i < s.size(); i++)
	{
		// skip non-alpha characters
		while (i < s.size() && !isalpha(s[i]))
		{
			i++;
		}

		// if there are still letters, add the next letter
		if (i < s.size())
		{
			result += tolower(s[i]);
		}
	}

	return result;

}

string reverse(string s)
{
	string result;

	for (int i = 0; i < s.size(); i++)
	{
		result += s[s.size() - i - 1];
	}

	return result;
}
